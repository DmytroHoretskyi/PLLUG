//Створити пустий об’єкт;
// test
{
    const obj = {}
}

//Створити пустий об’єкт без прототипу;
{
    const emptyObj = Object.create(null)
}

//Додати до об’єкта будь які нові поля всіма відомими способами;
{
    let obj = {}
    obj.key = 'key'
    obj['key2'] = 'key2'
}

//Створити пустий масив;
{
    const arr = []
}

//Створити пустий масив довжиною 100500 елементів;
{
    let arr = []
    arr.length = 100500
}
//Створити масив з декількома елементами;
{
    let arr = ['string',22, true]
}

//Зробити заповнений масив пустим;
{
    let arr = [1,2,3,4,5,6,'Jo']
    arr.length = 0
}

//Дано масив, [1,2,3,4,5], потрібно створити функцію,
// яка видалить певний елемент з масиву за його індексом та поверне новий масив(оновлений- після видалення);
{
    let arr = [1,2,3,4,5]
    function del(position) {
        arr.splice(position,1)
        console.log(arr)
    }
    del(1)
}
//Створити функцію, яка приймає один масив у якості аргументу 
//та повертає булеве значення в залежності чи в неї передали пустий масив чи ні;
{
    function arrCheck(arr) {
        if(arr.length === 0){
            console.log(false)
        }
        else {
            console.log(true)
        }
    } arrCheck([])
}
//Створити функцію, яка приймає один об’єкт у якості аргументу
// та повертає булеве значення в залежності чи в неї передали пустий об’єкт чи ні;
{
    function objCheck(obj) {
        if (Object.keys(obj).length === 0) {
            console.log(false);
        }
        else {
            console.log(true)
        }
    }
    objCheck({})
}
//Створити функцію, яка обєднає два масиви в один та поверне його в якості результату;
{
    function arrCombine(arr1,arr2) {
        let combinedArr = [...arr1,...arr2]
        console.log(combinedArr)
    }
    arrCombine([1,2,3],[4,5,6])
}
//Створити функцію, яка приймає один масив чисел у якості аргументу та повертає новий масив,
// який складається з елементів попереднього в степені 3. Для прикладу, на вході: [1, 2, 3] ⇒ [1, 8, 27];
{
    function arrMultiply(arr) {
        console.log(arr.map((x)=>{return  x**3}))
    }
arrMultiply([1,2,3])
}
//Створити функцію, яка приймає один масив чисел у якості аргументу 
// та повертає новий масив, який складається з непарних елементів вхідного масиву;
{
    function oddArr(arr) {
        let oddArr = []
        for (let i of arr){
            if (i%2){
              oddArr.push(i)
            }
        }
        console.log(oddArr)
    }
    oddArr([1,2,3,4,5,6,7,8,9,10])
}
//Створити функцію, яка приймає один масив чисел у якості аргументу та повертає новий масив,
// який складається тільки з цілих елементів вхідного масиву; Для прикладу: [5, 3.14, 4.1, 10, 11, 20.1] ⇒ [5, 10, 11];
{
    function arrOfIntegers(arr) {
        let newArr = []
        for (let i of arr){
            if (i - Math.floor(i) === 0){
                newArr.push(i)
            }
        }
        console.log(newArr)
    }
    arrOfIntegers([5, 3.14, 4.1, 10, 11, 20.1])
}
//Створити функцію, яка нічого не повертає;
{
    function f() {
        return undefined
    }
    console.log(f)
}
